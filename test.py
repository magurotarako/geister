from PIL import Image, ImageDraw
import copy
import random
import numpy as np
import sys
import re
import pickle
import yaml
from yaml import load, dump
try:
    from yaml import CLoader as Loader, CDumper as Dumper
except ImportError:
    from yaml import Loader, Dumper


'''
dict = {}
dict["a"] = [2, 4.0]
dict["b"] = [1, 1.0]
print(dict)                   #{'a': [2, 4.0], 'b': [1, 1.0]}
print(list(dict.keys()))      #['a', 'b']
print(list(dict.values()))    #[[2, 4.0], [1, 1.0]]

adds = ["c", "b", "a", "a"]
for i in range(len(adds)):
    add = adds[i]
    if add not in dict:
        dict[add] = [1, 0.5 ** i]
    else:
        value = dict[add]
        value[0] += 1
        value[1] += 0.5 ** i
        dict[add] = [value[0], value[1]]
print(dict)
#{'a': [4, 4.375], 'b': [2, 1.5], 'c': [1, 1]}なら成功
'''

def test_save():
    test_output = {'010000010000100000100010000100001000010000100001000010000100001000010010000001000010000100001000010000100001000010000001001000010000100001000010000010001001000000100001000010000100': [2, 1.0099757770240103], '001000010010000010000010001000100000010001000001000010000100001000010010000001000000100100001000010000100001000000100100000100001000100000010010000100001000000100100000100010000100': [2, -1.1055902664192412], '010000010000100001000010000100100000010000100001000010000100001000010000100010000010000100001000010000100000010010000100001000010000100001000010000100001000001000010001000010000001': [2, -1.1280382271393137], '010000010000100001000010000100100000010000100001000010000100001000010000100010000010000100001000010000100000010010000100001000010000100001000010000001001000001000010001000010000100': [2, -1.1167578448679203], '010000010000100001000010000100100000010000100001000010000100001000010000100001000100000100001000010000100000010010000100001000010000100001000010000001001000001000010001000010000100': [2, -1.1055902664192412], '100000010000100001000010001000010000010000100001000010000100000100010000100001000010000100001000010000100100000000100100001000010001000001000010000100001000010000100000100010000001': [2, -0.6756452716685315], '100000010000100001000010000100010001000000100010000010001000010000010000100001001000010000001000000100100001000010000001000100001000010001000000100100000100010000100001000000100100': [2, -0.4128984733255056], '001000010010000010001000001000001000100000100001000010001000001000010010000100000010000100001000010000001001000010000100000010001000001001000000100100001000010000010000100010000100': [2, 0.5581969242954117], '001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010001000100000010000100000010010000100000100010000100000010010000100001000010000100': [2, 1.7731278877777825], '001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000100000100100000010000100000010010000100001000001000100000010010000100001000010000100': [2, 1.6693647086921062], '001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000100000100100000010000100000010010000100001000001000100001000000100100001000010000100': [2, 1.6526710616051852], '001000010000100001000010000100001000010000100001000010000100001000010000100100000010000100001000100000100001000010000100000010010000100001000001000100000010010000100001000010000100': [2, 1.555956997990759], '010000010000100100000010010000001000010000100001000010001000000101000000100001000010000100001000010000100001000000100001001000010000100000100010000010001000010000100001000010000001': [2, 0.4128984733255056], '010000010010000001000010010000001000010000100001000010001000000101000000100001000010000100001000010000100001000000100001001000010000100000100010000010001000010000100001000010000001': [2, 0.40876948859225054], '001000010010000100000100000100010001000000100010000010000100001000010000001001000000110000000100001000100001000010000100001000010000010001000010000010001000010000100000010010000001': [2, 0.30236694334142405], '001001000010000100000100000100001000100000100010000010000100001000010000001001000010010000000100001000100001000000100100001000010000100000100010000010001000010000100000010000100100': [2, 0.26533334944203746], '100000010000100100000010000100001000010000100010000010001000001000010010000001000010000100001000010000100000010010000100001000010000100001000010000100000100010010000001000001000001': [2, 0.6234480897474481], '100000010001000001000010000100001000010000100001000010010000001000010000100010000010000100000010010000100001000010000100001000001000100001000010000010000010010000001000010001000100': [2, 0.9998760192537701]}
    print(test_output)
    with open("test_output.pkl", 'wb') as tf:
        pickle.dump(test_output, tf)
    return

test_save()
